function cleanSQL(sql) {
  // 1. Remove comments
  sql = sql.replace(/--.*$/gm, ''); // Single-line comments
  sql = sql.replace(/\/\*[\s\S]*?\*\//g, ''); // Multi-line comments

  // 2. Normalize whitespace
  sql = sql.replace(/\s+/g, ' '); // Collapse multiple spaces/newlines
  sql = sql.trim(); // Remove leading/trailing whitespace

  // 3. Uppercase keywords (optional)
  const keywords = ['SELECT', 'FROM', 'WHERE', 'GROUP BY', 'ORDER BY', 'HAVING', 'JOIN', 'INNER', 'LEFT', 'RIGHT', 'FULL', 'ON', 'AND', 'OR', 'NOT', 'IN', 'BETWEEN', 'LIKE', 'LIMIT', 'OFFSET', 'AS', 'DISTINCT', 'CREATE', 'TABLE', 'INSERT', 'UPDATE', 'DELETE', 'ALTER', 'DROP'];
  const keywordRegex = new RegExp(`\\b(${keywords.join('|')})\\b`, 'gi');
  sql = sql.replace(keywordRegex, (match) => match.toUpperCase());

  // 4. Basic indentation (more complex, requires parsing for perfect result)
  // This is a simplified example and won't handle all cases perfectly.
  sql = sql.replace(/;\s*$/g, ''); // Remove trailing semicolon (if present)
  let indentLevel = 0;
  sql = sql.split('\n').map(line => {
    line = line.trim();
    if (line.startsWith(')')) indentLevel--;
    const indentedLine = '  '.repeat(indentLevel) + line;
    if (line.endsWith('(') || line.endsWith(',')) indentLevel++;
    return indentedLine;
  }).join('\n');

  return sql;
}

const dirtySQL = `
/*
  This is a multi-line comment.
*/
SELECT  id, name ,  \nvalue -- This is a single-line comment
\nFROM   my_table 
WHERE value > 10   AND status = 'active';

select COUNT(*) FROM another_table; -- another comment
`;

const cleanSQLResult = cleanSQL(dirtySQL);
console.log(cleanSQLResult);
